/**
 * 
 */
package logic.deprecated.taskFieldSetter;

import java.util.Arrays;
import java.util.Collection;
import java.util.Map;

import logic.utility.MultiMapMatcher;
import logic.utility.Task;

import com.google.common.collect.ArrayListMultimap;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.Multimap;

import definedEnumeration.Priority;

/**
 * @author Kuan Tien Long
 *
 */
public class TaskPriorityFieldSetter implements TaskFieldSetter {

    /*
     * (non-Javadoc)
     * 
     * @see logic.TaskAttribute#set()
     */
    @Override
    public String set(Task task, String arguments) {
        Priority priority = MultiMapMatcher
                .getMatchedKey(createFakeMultiMap(), arguments);
        task.setPriority(priority);
        return arguments;
    }

    /**
     * This function create a map of commands and add them to the multi map. The
     * real multi map will be generated by reading a file which consist the
     * available action word to match
     */
    private Multimap<Priority, String> createFakeMultiMap() {
        Multimap<Priority, String> availableActions = ArrayListMultimap
                .create();

        final Map<Priority, Collection<String>> highPriorityActions = ImmutableMap
                .<Priority, Collection<String>> of(Priority.PRIORITY_HIGH,
                        Arrays.asList("high", "urgent", "now"));
        final Map<Priority, Collection<String>> mediumPriorityActions = ImmutableMap
                .<Priority, Collection<String>> of(Priority.PRIORITY_MEDIUM,
                        Arrays.asList("medium", "med", "later", "next time"));
        final Map<Priority, Collection<String>> lowPriorityActions = ImmutableMap
                .<Priority, Collection<String>> of(Priority.PRIORITY_LOW,
                        Arrays.asList("low", "kiv", "when free", "-no"));

        addMapToMultiMap(highPriorityActions, availableActions);
        addMapToMultiMap(mediumPriorityActions, availableActions);
        addMapToMultiMap(lowPriorityActions, availableActions);

        return availableActions;
    }

    private void addMapToMultiMap(final Map<Priority, Collection<String>> map,
            Multimap<Priority, String> availableActions) {
        for (Priority key : map.keySet()) {
            availableActions.putAll(key, map.get(key));
        }
    }

}
