/**
 * 
 */
package logic;

import java.util.Arrays;
import java.util.Collection;
import java.util.Map;

import com.google.common.collect.ArrayListMultimap;
import com.google.common.collect.ImmutableMap;
import com.google.common.collect.Multimap;

/**
 * @author Kuan Tien Long
 *
 */
public interface TaskParser 
{
    
    
    Task buildTask(String userInput) throws InvalidCommandException;
    /**
     * This function create a map of commands and add them to the multi map. 
     * The real multi map will be generated by reading a file which consist the available action word to match
     */
    
    default Multimap<TaskAttribute, String> createFakeMultiMapNow()
    {
        
            Multimap<TaskAttribute, String> availableActions =  ArrayListMultimap.create();
            TaskPriorityAttribute priorityCommand = new TaskPriorityAttribute();
            TaskDateAttribute dateCommand = new TaskDateAttribute();

           
            final Map<TaskAttribute, Collection<String>> dateActions = ImmutableMap.<TaskAttribute, Collection<String>>of(
                    dateCommand, Arrays.asList("date", "day", "d", "month", "time"));
            final Map<TaskAttribute, Collection<String>> priorityActions = ImmutableMap.<TaskAttribute, Collection<String>>of(
                    priorityCommand, Arrays.asList("priority", "pri", "p"));
            
            for (TaskAttribute key : dateActions.keySet()) {
                availableActions.putAll(key, dateActions.get(key));
              }
            for (TaskAttribute key : priorityActions.keySet()) {
                availableActions.putAll(key, priorityActions.get(key));
              }
            
            
            return availableActions;

    }
    
}